private ResponseModel GetJwtToken(string userName, TimeSpan? tokenExpirationOverride = null)
{
    var claims = new List<Claim>
    {
        new Claim("Id", Guid.NewGuid().ToString()),
        new Claim(ClaimTypes.Name, userName),
        new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString())
    };

    // Get token expiration from the configuration or use the override value if provided
    var tokenExpirationInMinutes = Convert.ToInt16(_configuration["JwtTokenGenerator:TokenExpirationInMinutes"]);
    var tokenExpiration = tokenExpirationOverride ?? TimeSpan.FromMinutes(tokenExpirationInMinutes);

    var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration["AzureADConfig:ClientSecret"]));
    var credentials = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);

    var token = new JwtSecurityToken(
        issuer: _configuration["AzureADConfig:ClientId"],
        audience: _configuration["AzureADConfig:TenantId"],
        expires: DateTime.UtcNow.Add(tokenExpiration),
        claims: claims,
        signingCredentials: credentials
    );

    var tokenHandler = new JwtSecurityTokenHandler();
    var accessToken = tokenHandler.WriteToken(token);

    if (accessToken == null)
        return ApiResponse.CreateErrorResponse("Unable to generate token!");
    else
        return ApiResponse.CreateSuccessResponse(new { accessToken }, "Token generated");
}
