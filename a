public async Task<ResponseModel> GetEmployeeAdjustmentDetails(int ccmsid, string flag)
        {
            ResponseModel? response = null;
            try
            {
                var parameters = new DynamicParameters();
                parameters.Add("@ccmsid", ccmsid);
                parameters.Add("@flag", flag);

                var result = await _dbConnection1.QueryAsync<object>("dbo.sel_employee_adjustmentdetails", parameters, commandType: CommandType.StoredProcedure);

                if (result.Any())
                {
                    response = ApiResponse.CreateSuccessResponse(result, "Retrieved Successfully!");
                }
                else
                {
                    
                    var logEvent = new LogEventInfo(NLog.LogLevel.Error, null, "Record Not Found");
                    logEvent.Properties["Source"] = "CCMSAPI-EmployeeAdjustmentController/GetEmployeeAdjustmentDetails";
                    var logger = NLog.LogManager.Setup().LoadConfigurationFromAppSettings().GetCurrentClassLogger();
                    logger.Log(logEvent);

                    response = ApiResponse.CreateErrorResponse("Record not found!");
                    response.HttpStatusCode = (int)HttpStatusCode.NoContent;
                }
            }
            catch (Exception ex)
            {
                var logEvent = new LogEventInfo(NLog.LogLevel.Error, null, ex.Message);
                logEvent.Properties["Source"] = "CCMSAPI-EmployeeAdjustmentController/GetEmployeeAdjustmentDetails";
                var logger = NLog.LogManager.Setup().LoadConfigurationFromAppSettings().GetCurrentClassLogger();
                logger.Log(logEvent);
                throw;
            }

            return response;
        }





















  [HttpGet("GetEmployeeAdjustmentDetails/{ccmsid}/{flag}")]
        public async Task<IActionResult> GetEmployeeAdjustmentDetails(int ccmsid, string flag)
        {
            var result = await _repository.GetEmployeeAdjustmentDetails(ccmsid, flag);
            if (result.HttpStatusCode == 204)
                return NoContent();

            return Ok(JsonConvert.SerializeObject(result, Formatting.Indented));
        }
